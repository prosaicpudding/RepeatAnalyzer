name: GitHub Actions Demo
run-name: ${{ github.actor }} is running our tests ðŸš€
on: [push]
jobs:
  Unit-Tests:
    runs-on: windows-latest
    steps:
      - name: Check out Repository Code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install poetry
          poetry install

      - name: Run Unit Tests
        run: |
          poetry run pytest --cov=RepeatAnalyzer tests
          mv .coverage htmlcov


      - name: Upload Coverage Report (Only on Main Branch)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: main-coverage
          path: htmlcov

      - name: Download Main Branch Coverage Artifact
        uses: actions/download-artifact@v2
        id: download_main_coverage
        with:
          name: main-coverage
          path: main-coverage
        continue-on-error: true

      - name: Calculate Coverage Difference
        id: coverage_diff
        run: |
          Write-Host "Current Directory: $(Get-Location)"
          Write-Host "Files in htmlcov directory: $(Get-ChildItem -Path htmlcov)"
          $MAIN_COVERAGE = try {
              [xml]::new().Load('main-coverage/htmlcov/coverage.xml').SelectSingleNode('//line-rate').InnerText
          } catch {
              Write-Host ''  # Do nothing if file not found
          }

          Write-Host "::set-output name=MIN_COVERAGE::$MAIN_COVERAGE"

      - name: Check Coverage
        run: |
          $ACTUAL_COVERAGE = [xml]::new().Load('htmlcov/coverage.xml').SelectSingleNode('//line-rate').InnerText

          if (-not $env:MIN_COVERAGE -or [double]$ACTUAL_COVERAGE -ge [double]$env:MIN_COVERAGE) {
              Write-Host "Coverage is above or equal to the minimum required."
          } else {
              Write-Host "Error: Coverage is below the minimum required."
              exit 1
          }
        env:
          MIN_COVERAGE: ${{ steps.coverage_diff.outputs.MIN_COVERAGE }}
