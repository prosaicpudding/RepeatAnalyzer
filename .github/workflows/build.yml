name: Build Executable
run-name: ${{ github.actor }} is building our windows executable ðŸš€
on: [push]
jobs:
  Build:
    runs-on: ${{ matrix.os }}

    strategy:
        matrix:
            os: [macos-latest, windows-latest]
    steps:
      - name: Check out Repository Code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -V
          pip install --upgrade pip
          pip install poetry
          pip freeze
          poetry show

      - name: Install Macos Dependencies
        if: matrix.os == 'macos-latest'
        env:
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
        run: |
          brew update

          # For Basemap
          brew install geos

          # for certifi
          #/Applications/Python\ 3.11/Install\ Certificates.command
          # Build is currently broken with a certificate issue

          # for pyproj
          pip uninstall -y  pyproj
          brew install proj
          poetry run pip install pyproj --no-binary :all:

          # For Pillow
          pip uninstall -y Pillow
          brew install libjpeg libtiff little-cms2 openjpeg webp
          poetry run pip install Pillow --no-binary :all:

          # Update package versions
          poetry lock

      - name: Build Executable
        run: |
          pip freeze
          poetry show

          poetry install --without dev --with build --sync
          poetry run pyinstaller --log-level DEBUG RepeatAnalyzer.spec

      - name: Macos debug
        if: matrix.os == 'macos-latest'
        run: |
          ls build/RepeatAnalyzer
          ls -l /usr/local/lib
          ls -l /System/Library/Frameworks/

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
            name: RepeatAnalyzer
            path: dist/*

    # if this is a tagged commit, create a release
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

    # if this is a tagged commit, create a release
      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./RepeatAnalyzer.zip
          asset_name: RepeatAnalyzer.zip
          asset_content_type: application/zip
